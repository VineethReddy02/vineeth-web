<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Vineeth&#39;s profile!</title>
    <link>http://vineethweb.com/post/</link>
    <description>Recent content in Posts on Vineeth&#39;s profile!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Jul 2015 09:32:45 -0400</lastBuildDate>
    
	<atom:link href="http://vineethweb.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>All About Docker Instructions</title>
      <link>http://vineethweb.com/post/docker-instructions/</link>
      <pubDate>Tue, 28 Jul 2015 09:32:45 -0400</pubDate>
      
      <guid>http://vineethweb.com/post/docker-instructions/</guid>
      <description>The main intention behind writing this blog is to understand docker instructions and it&amp;rsquo;s capabilities while writing a Dockerfile.
In the recent past it&amp;rsquo;s hard to find an application without a Dockerfile. ðŸ˜ƒ
 INSTRUCTIONS used in Dockerfile  FROM MAINTAINER RUN CMD LABEL EXPOSE ENV ADD COPY ENTRYPOINT VOLUME USER WORKDIR ARG ONBUILD STOPSIGNAL HEALTHCHECK SHELL   FROM FROM &amp;lt;image&amp;gt; # picks latest by default FROM &amp;lt;image&amp;gt;:&amp;lt;tag&amp;gt; # specific version can be pulled FROM &amp;lt;image&amp;gt;@&amp;lt;digest&amp;gt; # This makes sure we pull the specific image with provided digest, # If image content is changed digest also changes.</description>
    </item>
    
    <item>
      <title>Inspecting Kubernetes Theoritically</title>
      <link>http://vineethweb.com/post/intro-to-k8s/</link>
      <pubDate>Tue, 28 Jul 2015 09:32:45 -0400</pubDate>
      
      <guid>http://vineethweb.com/post/intro-to-k8s/</guid>
      <description>Kubernetes Kubernetes only understands pods not containers.
Pod Creation Requests  Bare pod RelplicaSet Deployment  Multi Container Pods  Share access to memory space Connect to each other using localhost Share access to the same volumes (storage abstraction) Tightly coupled. One crashes, all crashes. Same parameters such as config maps.  Pod Atomic Unit in Kubernetes is Pod
In a pod either all conatiners or none of them run.</description>
    </item>
    
  </channel>
</rss>